name: Build and Test
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        image: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2

      # Backend
      - name: NuGet Cache
        uses: actions/cache@v1.1.0
        with:
          path: ~/.nuget
          key: ${{ runner.os }}-.nuget-${{ hashFiles('src/dotnet/**/*.csproj') }}+${{ hashFiles('src/dotnet/**/*.props') }}
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.4.0
        with:
          dotnet-version: '3.1.101'
      - name: Build Backend
        run: dotnet build -c Release

      # Frontend
      - name: Gradle Wrapper Cache
        uses: actions/cache@v1.1.0
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-.gradle-wrapper-${{ hashFiles('gradle/**') }}
      - name: Gradle Cache
        uses: actions/cache@v1.1.0
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-.gradle-caches-${{ hashFiles('**/*.gradle') }}
      - name: Test
        run: ./gradlew -PBuildConfiguration=Release --no-daemon test
      - name: Upload Test Results
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ runner.os }}.test-results
          path: build/reports/tests

      # Distribution
      - name: Build Distribution
        if: matrix.image == 'windows-latest'
        run: ./gradlew -PBuildConfiguration=Release --no-daemon buildPlugin
      - name: Upload Distribution
        if: matrix.image == 'windows-latest'
        uses: actions/upload-artifact@v1.0.0
        with:
          name: distribution
          path: build/distributions
